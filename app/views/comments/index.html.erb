<% content_for :title, 'Comments' %>

<h1>Comments</h1>

<div class="links"><%= @total_comments %> comments received from <%= @total_commenters %> commenters</div>


<div class="links">
  <% if current_user.can_edit?(current_rulemaking) %>
    <%= link_to 'Import comments', comments_import_path %> |
    <%= link_to 'Manually enter a comment', new_comment_path %> |
  <% end %>
  Download as <%= link_to "CSV", comments_path(@filter_querystring.merge({format: "csv"})) %>
  or <%= link_to "XLSX", comments_path(@filter_querystring,format: "xlsx") %>
</div>

<div class="filter-box">
  <button id="show_filter" class="filter-button">Show/Hide Filter</button>
  <div class="filter <%="hidden" unless @filtered %>">
    <%= form_tag request.path, method: 'get' do %>
      <div class="field">
        <%= label_tag :comment_data_sources %>
        <%= select_tag :comment_data_source_id, options_from_collection_for_select(@comment_data_sources,:id,:data_source_name,params[:comment_data_source_id]), { :include_blank => true, class: "selectpicker", "data-live-search" => "true" } %>
      </div>
      <div class="field">
        <%= label_tag :first_name  %>
        <%= text_field_tag :first_name, params[:first_name], class: 'short' %>
      </div>
      <div class="field">
        <%= label_tag :last_name  %>
        <%= text_field_tag :last_name, params[:last_name], class: 'short' %>
      </div>
      <div class="field">
        <%= label_tag :email  %>
        <%= text_field_tag :email, params[:email], class: 'short' %>
      </div>
      <div class="field">
        <%= label_tag :organization  %>
        <%= text_field_tag :organization, params[:organization], class: 'short' %>
      </div>
      <div class="field">
        <%= label_tag :state  %>
        <%= text_field_tag :state, params[:state], class: 'short' %>
      </div>
      <div class="field">
        <%= label_tag :comment_text  %>
        <%= text_field_tag :comment_text, params[:comment_text] %>
      </div>
      <div class="field">
        <%= label_tag :has_attachment  %>
        <%= check_box_tag :has_attachment, params[:has_attachment], params[:has_attachment] == "on" %>
      </div>
      <div class="field">
        <%= label_tag :summary  %>
        <%= text_field_tag :summary, params[:summary] %>
      </div>
      <div class="field">
        <%= label_tag :suggested_changes %>
        <%= select_tag :category_id, options_from_collection_for_select(@categories,:id,:category_name,params[:category_id]), { :include_blank => true, class: "selectpicker", "data-live-search" => "true" } %>
      </div>
      <div class="field">
        <%= label_tag :status %>
        <%= select_tag :comment_status_type_id, options_from_collection_for_select(@comment_status_types,:id,:status_text,params[:comment_status_type_id]), { :include_blank => true, class: "selectpicker", "data-live-search" => "true" } %>
      </div>
      <div class="field">
        <%= label_tag :notes  %>
        <%= text_field_tag :notes, params[:notes] %>
      </div>
      <div class="field">
        <%= label_tag :manually_entered  %>
        <%= check_box_tag :manually_entered, params[:manually_entered], params[:manually_entered] == "on" %>
      </div>

      <div class="actions">
        <%= submit_tag "Search" %>
        <%= button_tag 'Clear Filter', {:type => 'reset', id: "clear_filter"} %>
      </div>
    <% end %>
  </div>
</div>

<%= will_paginate @comments %>
<table>
  <thead>
    <tr>
      <th>#</th>
      <th>Data source</th>
      <th>Name & Email</th>
      <th>Organization & State</th>
      <th>Comment text</th>
      <th>Attachment</th>
      <th>Summary</th>
      <th>Comment review status</th>
      <th>Notes</th>
      <th>Categories</th>
      <th colspan="<%= current_user.can_edit?(current_rulemaking) ? 2 : 1 %>"></th>
    </tr>
  </thead>

  <tbody>
    <% @comments.each do |comment| %>
      <tr>
        <td><%= comment.order_in_list %></td>
        <td><%= comment.comment_data_source.data_source_name if comment.comment_data_source.present? %></td>
        <td><%= comment.name_and_email%></td>
        <td><%= "#{comment.organization + ", " if comment.organization.present?}#{comment.state}" %></td>
        <td><%= comment.comment_text.truncate(1000) if comment.comment_text.present?%></td>
        <td><%= (link_to comment.attachment_name.truncate(10), comment.attachment_url) if comment.attachment_name.present? %></td>
        <td class="<%= highlight_empty_css(comment.summary)%>"><%= comment.summary.truncate(500) if comment.summary.present? %></td>
        <td class="<%= status_css(comment.comment_status_type)%>"><%= comment.comment_status_type.status_text if comment.comment_status_type.present? %></td>
        <td class="trix-content"><%= raw(comment.notes.truncate(300)) if comment.notes.present? %></td>
        <td class="<%= highlight_empty_css(comment.categories)%>"><% comment.categories.order('LOWER(category_name)').each_with_index do |c,index|%>
            <% if index != 0 %>
              <div class="separate">
            <% end %>
            <%= link_to(c.category_name, current_user.can_edit?(current_rulemaking) ? edit_category_path(c) : category_path(c)) %>
            <% if index != 0 %>
              </div>
            <% end %>
        <% end %></td>
        <% if current_user.can_edit?(current_rulemaking) %>
          <td><%= link_to 'Edit', edit_comment_path(comment,@filter_querystring) %></td>
          <td>
            <% if comment.manually_entered && current_user.admin? %>
              <%= link_to 'Delete', comment, method: :delete, data: { confirm: "Are you sure you want to delete comment ##{comment.order_in_list}?" } %>
            <% end %>
          </td>
        <% else %>
          <td><%= link_to 'Show', comment_path(comment,@filter_querystring) %></td>
        <% end %>
      </tr>
    <% end %>
  </tbody>
</table>
<%= will_paginate @comments %>